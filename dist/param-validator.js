"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.paramValidator=void 0;function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_unsupportedIterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(a,b){if(a){if("string"==typeof a)return _arrayLikeToArray(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?_arrayLikeToArray(a,b):void 0}}function _iterableToArray(a){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(a))return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a))return _arrayLikeToArray(a)}function _arrayLikeToArray(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}var DEFAULT_ERROR_CODES={404:"Not found.",403:"Bad request.",401:"Unauthorized."},_validateEmail=function(a){return /\S+@\S+\.\S+/.test(a)},_blackListTransform=function(a){return"number"==typeof a?a.toString():a},paramValidator=function(a,b,c,d){var e=function(){var c=a.filter(function(a){return!b.body[a.name]&&!a.optional}).map(function(a){return"Field '".concat(a.name,"' is missing. ( is required)")}),d=a.filter(function(a){return _typeof(b.body[a.name])!=a.type&&b.body[a.name]&&"email"!==a.type}).map(function(a){return"'".concat(a.name,"' type is wrong (should be '").concat(a.type,"')")}),e=a.filter(function(a){return a.oneOf&&!a.oneOf.includes(b.body[a.name])}).map(function(a){return"'".concat(a.name,"' value is not allowed. Should be one of: [").concat(a.oneOf,"]")}),f=a.filter(function(a){return"email"===a.type}).filter(function(a){return!_validateEmail(b.body[a.name])}).map(function(a){return"'".concat(b.body[a.name],"' is not a valid e-mail. Should follow the pattern: xxxxxx@xxxxx.xxx")});return[].concat(_toConsumableArray(c),_toConsumableArray(d),_toConsumableArray(e),_toConsumableArray(f),_toConsumableArray(function paramBlackListMessages(){var c=a.map(function(a){return a.blacklist&&a.blacklist.filter(function(c){return _blackListTransform(b.body[a.name]).includes(c)}).map(function(b){return"'".concat(b,"' not allowed for param '").concat(a.name,"'")})}).filter(function(a){return a&&1<=a.length});return 1<=c.length?c.reduce(function(a,b){return a.concat(b)}):[]}()))};return 1<=e().length?c.status(403).send({success:!1,message:e()}):d?d(function(a,b){return c.status(a).send({success:!1,message:b||DEFAULT_ERROR_CODES[a]})},function(a){return c.status(200).send({success:!0,message:a})}):c.status(200).send({success:!0,message:"success"})};exports.paramValidator=paramValidator;